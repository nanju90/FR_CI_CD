<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.org</groupId>
	<artifactId>dtv</artifactId>
	<version>0.0.1</version>
	<!--
	<packaging>pom</packaging>-->
	<packaging>jar</packaging>
	
	<profiles>
		<!-- The configuration of the development profile -->
		<profile>
			<id>dev</id>
			<!-- The development profile is active by default -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the development profile is dev, we must set the value of the build.profile.id 
					property to dev. -->
				<build.profile.id>dev</build.profile.id>
			</properties>
		</profile>
		<!-- The configuration of the development profile -->
		<profile>
			<id>test</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the development profile is dev, we must set the value of the build.profile.id 
					property to dev. -->
				<build.profile.id>test</build.profile.id>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the development profile is prod, we must set the value of the build.profile.id 
					property to prod. -->
				<build.profile.id>prod</build.profile.id>
			</properties>
		</profile>

	</profiles>

	<properties>
	 <!--
		<jetty.port>9988</jetty.port>
		<hostContext>localhost</hostContext>
		<search.home>/web/SearchIndex</search.home>-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.commons.logging.plugin>1.1.3</version.commons.logging.plugin>
		<version.junit>4.12</version.junit>
		<version.log4j>1.2.17</version.log4j>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${version.junit}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${version.log4j}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${version.commons.logging.plugin}</version>
			<type>jar</type>
		</dependency>
	</dependencies>

	<build>
		<finalName>dtv_custom</finalName>
		<filters>
			<!-- Ensures that the config.properties file is always loaded from the 
				configuration directory of the active Maven profile. -->
			<filter>src/main/conf/environment/${build.profile.id}/build.properties</filter>
		</filters>
		<resources>
			<!-- Placeholders that are found from the files located in the configured 
				resource directories are replaced with the property values found from the 
				profile specific configuration file. -->
			<resource>
				<filtering>true</filtering>
				<!--<directory>src/main/resources</directory> -->
				<directory>xml/</directory>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
		    <!-- Set a JDK compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
				  <execution>
				    <id>released-version</id>
				    <goals>
				      <goal>released-version</goal>
				    </goals>
				  </execution>
				</executions>
		      </plugin>
			
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/config</outputDirectory>
							<resources>
								<resource>
									<directory>xml</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.xml</include>
									</includes>
								</resource>
							</resources>
							<delimiters>
								<delimiter>${*}</delimiter>
								<delimiter>[[*]]</delimiter>
							</delimiters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<finalName>configuration</finalName>
					<descriptors>
						<descriptor>${basedir}/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>create-archive</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
				  <!-- DO NOT include log4j.properties file in your Jar -->
				  <excludes>
					<exclude>**/log4j.properties</exclude>
				  </excludes>
				  <archive>
					<!--<manifest>
						 Jar file entry point 
						<mainClass>com.org.Hello</mainClass>
					</manifest>-->
				  </archive>
				</configuration>
			</plugin>
			<!-- the below cleaup plugin is not working -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>Deleting config directory 
				under target, but not target itself</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<filesets>
						<fileset>
							<directory>target/config</directory>
							<followSymlinks>false</followSymlinks>
							<includes>
								<include>**/*.xml</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin> -->
		</plugins>
	</build>

</project>
